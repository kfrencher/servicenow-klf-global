<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_atf_step">
    <sys_atf_step action="DELETE">
        <active>true</active>
        <copied_from/>
        <description>Run Server Side Validation Script</description>
        <display_name>Run Server Side Script</display_name>
        <inputs/>
        <mugshots_cache_json/>
        <notes/>
        <order>1</order>
        <step_config display_value="Run Server Side Script">41de4a935332120028bc29cac2dc349a</step_config>
        <sys_class_name>sys_atf_step</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-01-26 13:45:53</sys_created_on>
        <sys_id>938b5f3297a42150b2e1f97e6253af86</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Run Server Side Script</sys_name>
        <sys_package display_value="G KLF" source="fa03e59197682910b2e1f97e6253af92">fa03e59197682910b2e1f97e6253af92</sys_package>
        <sys_policy/>
        <sys_scope display_value="G KLF">fa03e59197682910b2e1f97e6253af92</sys_scope>
        <sys_update_name>sys_atf_step_938b5f3297a42150b2e1f97e6253af86</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-01-27 01:58:31</sys_updated_on>
        <table/>
        <test display_value="KLF_GlideRecordUtilsTest">b57b1f3297a42150b2e1f97e6253afed</test>
        <timeout/>
        <warning_message/>
    </sys_atf_step>
    <sys_variable_value action="DELETE" query="document_key=938b5f3297a42150b2e1f97e6253af86"/>
    <sys_variable_value action="DELETE">
        <document>sys_atf_step</document>
        <document_key>938b5f3297a42150b2e1f97e6253af86</document_key>
        <order>200</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-01-26 13:45:53</sys_created_on>
        <sys_id>f70d5bf297a42150b2e1f97e6253aff7</sys_id>
        <sys_mod_count>13</sys_mod_count>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-01-28 20:40:16</sys_updated_on>
        <value>(function(outputs, steps, params, stepResult, assertEqual) {
	/**
	 * Function that creates two sample test tasks for
	 * testing
	 * @returns {GlideRecord[]} list of tasks created
	*/
	function createTestTasks() {
		var task1 = new GlideRecord('task');
		task1.short_description = 'KLF_GlideRecordUtils task1';
		task1.update();

		var task2 = new GlideRecord('task');
		task2.short_description = 'KLF_GlideRecordUtils task2';
		task2.update();

		return [task1, task2];
	}

	/**
	 * Function that deletes tasks created by createTestTasks
	 * @param {GlideRecord[]} testTasks list of tasks to delete
	 */
	function deleteTestTasks(testTasks) {
		testTasks.forEach(function(task) {
			// only need to delete if it exists
			var _task = new GlideRecord('task');
			if(_task.get(task.getUniqueValue())) {
				_task.deleteRecord();
			}
		});
	}


    describe('KLF_GlideRecordUtils.deleteRecord', function() {
		var testTasks = [];
		beforeAll(function() {
			testTasks = createTestTasks();
		});
		
		afterAll(function() {
			// cleanup created tasks
			deleteTestTasks(testTasks);
		});
		
		it('should delete only the records in the query', function(){
			// at this point there should be 2 tasks created by beforeAll
			// i'm going to target deleting one of them
			var taskDelete = new GlideRecord('task');
			var task1 = testTasks[0];
			taskDelete.addQuery('sys_id', task1.getUniqueValue());
			new global.KLF_GlideRecordUtils().deleteRecord('task', taskDelete.getEncodedQuery());

			// one should be deleted now. query for both and should get one back
			var task = new GlideRecord('task');
			// This keeps adding an or condition to the query
			// every return of the reduce function will return
			// a GlideCondition object where the next or is added
			testTasks.reduce(function(taskOrQuery, testTask) {
				return taskOrQuery.addOrCondition('sys_id', testTask.getUniqueValue());
			}, task.addQuery('sys_id', task1.getUniqueValue()));
			task.query();

			expect(task.getRowCount()).toBe(1);
		});
	});

	describe('KLF_GlideRecordUtils.updateRecord', function() {
		var testTasks = [];

		beforeAll(function() {
			testTasks = createTestTasks();
		});

		afterAll(function() {
			deleteTestTasks(testTasks);
		});

		it('should update the record', function() {
			var task = testTasks[0];
			var taskUpdate = new GlideRecord('task');
			taskUpdate.addQuery('sys_id', task.getUniqueValue());
			new global.KLF_GlideRecordUtils().updateRecord('task', taskUpdate.getEncodedQuery(), {
				short_description: 'KLF_GlideRecordUtils updated task'
			});

			var updatedTask = new GlideRecord('task');
			updatedTask.addQuery('sys_id', task.getUniqueValue());
			updatedTask.query();
			expect(updatedTask.next()).toBe(true);
			expect(updatedTask.getValue('short_description')).toBe('KLF_GlideRecordUtils updated task');
		});

	});

})(outputs, steps, params, stepResult, assertEqual);

jasmine.getEnv().execute();
</value>
        <variable display_value="Test script">989d9e235324220002c6435723dc3484</variable>
    </sys_variable_value>
    <sys_variable_value action="DELETE">
        <document>sys_atf_step</document>
        <document_key>938b5f3297a42150b2e1f97e6253af86</document_key>
        <order>100</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-01-26 13:45:53</sys_created_on>
        <sys_id>ff0d5bf297a42150b2e1f97e6253aff6</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-01-26 13:45:53</sys_updated_on>
        <value>3.1</value>
        <variable display_value="Jasmine version">42f2564b73031300440211d8faf6a777</variable>
    </sys_variable_value>
    <sys_update_version action="INSERT_OR_UPDATE">
        <action>DELETE</action>
        <application display_value="KLF Global">fa03e59197682910b2e1f97e6253af92</application>
        <file_path/>
        <instance_id>3985fabbdb7037808aea21c40596199a</instance_id>
        <instance_name>dev82424</instance_name>
        <name>sys_atf_step_938b5f3297a42150b2e1f97e6253af86</name>
        <payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_atf_step"><sys_atf_step action="INSERT_OR_UPDATE"><active>true</active><copied_from/><description>Run Server Side Validation Script</description><display_name>Run Server Side Script</display_name><inputs/><mugshots_cache_json/><notes/><order>1</order><step_config display_value="Run Server Side Script">41de4a935332120028bc29cac2dc349a</step_config><sys_class_name>sys_atf_step</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2023-01-26 13:45:53</sys_created_on><sys_id>938b5f3297a42150b2e1f97e6253af86</sys_id><sys_mod_count>0</sys_mod_count><sys_name>Run Server Side Script</sys_name><sys_package display_value="G KLF" source="fa03e59197682910b2e1f97e6253af92">fa03e59197682910b2e1f97e6253af92</sys_package><sys_policy/><sys_scope display_value="G KLF">fa03e59197682910b2e1f97e6253af92</sys_scope><sys_update_name>sys_atf_step_938b5f3297a42150b2e1f97e6253af86</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2023-01-27 01:58:31</sys_updated_on><table/><test display_value="KLF_GlideRecordUtilsTest">b57b1f3297a42150b2e1f97e6253afed</test><timeout/><warning_message/></sys_atf_step><sys_variable_value action="delete_multiple" query="document_key=938b5f3297a42150b2e1f97e6253af86"/><sys_variable_value action="INSERT_OR_UPDATE"><document>sys_atf_step</document><document_key>938b5f3297a42150b2e1f97e6253af86</document_key><order>200</order><sys_class_name>sys_variable_value</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2023-01-26 13:45:53</sys_created_on><sys_id>f70d5bf297a42150b2e1f97e6253aff7</sys_id><sys_mod_count>13</sys_mod_count><sys_updated_by>admin</sys_updated_by><sys_updated_on>2023-01-28 20:40:16</sys_updated_on><value>(function(outputs, steps, params, stepResult, assertEqual) {
	/**
	 * Function that creates two sample test tasks for
	 * testing
	 * @returns {GlideRecord[]} list of tasks created
	*/
	function createTestTasks() {
		var task1 = new GlideRecord('task');
		task1.short_description = 'KLF_GlideRecordUtils task1';
		task1.update();

		var task2 = new GlideRecord('task');
		task2.short_description = 'KLF_GlideRecordUtils task2';
		task2.update();

		return [task1, task2];
	}

	/**
	 * Function that deletes tasks created by createTestTasks
	 * @param {GlideRecord[]} testTasks list of tasks to delete
	 */
	function deleteTestTasks(testTasks) {
		testTasks.forEach(function(task) {
			// only need to delete if it exists
			var _task = new GlideRecord('task');
			if(_task.get(task.getUniqueValue())) {
				_task.deleteRecord();
			}
		});
	}


    describe('KLF_GlideRecordUtils.deleteRecord', function() {
		var testTasks = [];
		beforeAll(function() {
			testTasks = createTestTasks();
		});
		
		afterAll(function() {
			// cleanup created tasks
			deleteTestTasks(testTasks);
		});
		
		it('should delete only the records in the query', function(){
			// at this point there should be 2 tasks created by beforeAll
			// i'm going to target deleting one of them
			var taskDelete = new GlideRecord('task');
			var task1 = testTasks[0];
			taskDelete.addQuery('sys_id', task1.getUniqueValue());
			new global.KLF_GlideRecordUtils().deleteRecord('task', taskDelete.getEncodedQuery());

			// one should be deleted now. query for both and should get one back
			var task = new GlideRecord('task');
			// This keeps adding an or condition to the query
			// every return of the reduce function will return
			// a GlideCondition object where the next or is added
			testTasks.reduce(function(taskOrQuery, testTask) {
				return taskOrQuery.addOrCondition('sys_id', testTask.getUniqueValue());
			}, task.addQuery('sys_id', task1.getUniqueValue()));
			task.query();

			expect(task.getRowCount()).toBe(1);
		});
	});

	describe('KLF_GlideRecordUtils.updateRecord', function() {
		var testTasks = [];

		beforeAll(function() {
			testTasks = createTestTasks();
		});

		afterAll(function() {
			deleteTestTasks(testTasks);
		});

		it('should update the record', function() {
			var task = testTasks[0];
			var taskUpdate = new GlideRecord('task');
			taskUpdate.addQuery('sys_id', task.getUniqueValue());
			new global.KLF_GlideRecordUtils().updateRecord('task', taskUpdate.getEncodedQuery(), {
				short_description: 'KLF_GlideRecordUtils updated task'
			});

			var updatedTask = new GlideRecord('task');
			updatedTask.addQuery('sys_id', task.getUniqueValue());
			updatedTask.query();
			expect(updatedTask.next()).toBe(true);
			expect(updatedTask.getValue('short_description')).toBe('KLF_GlideRecordUtils updated task');
		});

	});

})(outputs, steps, params, stepResult, assertEqual);

jasmine.getEnv().execute();
</value><variable display_value="Test script">989d9e235324220002c6435723dc3484</variable></sys_variable_value><sys_variable_value action="INSERT_OR_UPDATE"><document>sys_atf_step</document><document_key>938b5f3297a42150b2e1f97e6253af86</document_key><order>100</order><sys_class_name>sys_variable_value</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2023-01-26 13:45:53</sys_created_on><sys_id>ff0d5bf297a42150b2e1f97e6253aff6</sys_id><sys_mod_count>0</sys_mod_count><sys_updated_by>admin</sys_updated_by><sys_updated_on>2023-01-26 13:45:53</sys_updated_on><value>3.1</value><variable display_value="Jasmine version">42f2564b73031300440211d8faf6a777</variable></sys_variable_value></record_update>]]></payload>
        <payload_hash>1216502697</payload_hash>
        <record_name>Run Server Side Script</record_name>
        <reverted_from/>
        <source>f214add197682910b2e1f97e6253afb4</source>
        <source_table>sys_update_set</source_table>
        <state>previous</state>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-01-28 20:40:16</sys_created_on>
        <sys_id>5d1f83e397ace150b2e1f97e6253af04</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_recorded_at>185fa1bfc8e0000001</sys_recorded_at>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-01-28 20:40:16</sys_updated_on>
        <type>Test Step</type>
        <update_guid>551f83e383ace150181da85bec4f5e04</update_guid>
        <update_guid_history>551f83e383ace150181da85bec4f5e04:1216502697,bffec7efec6ce15084064d9b0a60a1ed:562213679,9ced476353ace150e8a7ca38c9e50c11:-2132964824,b89d0b6fa26ce1500f142a7e52616fd5:1256015792,318c4befbf6ce15029620c5df2c93882:1828034908,612c87ef266ce1504c8e957f1de9ebed:232300969,947b8b6f906ce1503cff5225843db3ba:905586733,b07a876f256ce150f23252c2a450e22e:-616598337,6ea00723da6ce1507c947d26f062f5ff:-2033867851,ba308feffc2ce1505b0bdc37307d6d58:589001807,248b2bb619e4215039e81a0474866689:1696851305,88d32ffa44a421508aaefa8f21cd5574:1622871223,f09d1ff224a42150178fc41f8777e0c2:552124982,770d5bf258a42150c4a10436f61bf5f9:792509315</update_guid_history>
    </sys_update_version>
    <sys_metadata_delete action="INSERT_OR_UPDATE">
        <sys_audit_delete/>
        <sys_class_name>sys_metadata_delete</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-01-28 21:04:52</sys_created_on>
        <sys_db_object display_value="" name="sys_atf_step">sys_atf_step</sys_db_object>
        <sys_id>61cfbe45b5034ad897be469088c0f840</sys_id>
        <sys_metadata>938b5f3297a42150b2e1f97e6253af86</sys_metadata>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Run Server Side Script</sys_name>
        <sys_package display_value="KLF Global" source="fa03e59197682910b2e1f97e6253af92">fa03e59197682910b2e1f97e6253af92</sys_package>
        <sys_parent/>
        <sys_policy/>
        <sys_scope display_value="KLF Global">fa03e59197682910b2e1f97e6253af92</sys_scope>
        <sys_scope_delete display_value="">412a50ca22244ec0a8eec5f023b91000</sys_scope_delete>
        <sys_update_name>sys_atf_step_938b5f3297a42150b2e1f97e6253af86</sys_update_name>
        <sys_update_version display_value="sys_atf_step_938b5f3297a42150b2e1f97e6253af86">5d1f83e397ace150b2e1f97e6253af04</sys_update_version>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-08-11 11:06:22</sys_updated_on>
    </sys_metadata_delete>
</record_update>
